@model IEnumerable<WebWavez.Models.CancionViewModel>
@{
    ViewData["Title"] = "Wavez | Home Page";
}

<div class="text-center">
    <h1 class="display-4">Wavez</h1>
    <form asp-action="ResultadoBusqueda" method="get">
        <input type="text" name="query" placeholder="Buscar..." />
        <button type="submit">Buscar</button>
    </form>
    <div class="grid-canciones">
        @foreach (var item in Model)
        {
            <div class="card">
                <img class="card-img-top" data-song-image="@item.FotoPortada" src="@item.FotoPortada" style="width:200px; height:200px" alt="Card image cap">
                <div class="card-body">
                    <h5 class="card-title"><strong>@Html.DisplayFor(modelItem => item.Titulo)</strong></h5>
                    <p class="card-text">@Html.DisplayFor(modelItem => item.Autor)</p>
                    <button class="btn btn-primary play-button" data-song-url="@item.Url">Play</button>
                    <button onclick="addtoPlaylist(event)">Add To Playlist</button>
                    <p class="card-text" style="display:none;" data-song-id="@item.Id">@Html.DisplayFor(modelItem => item.Id)</p>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        document.querySelectorAll('.play-button').forEach(button => {
            button.addEventListener('click', async function (e) {
                e.preventDefault();
                console.log('Playing song...', this.getAttribute('data-song-url'));

                const songUrl = this.getAttribute('data-song-url');
                const songImage = this.getAttribute('data-song-image');
                const songId = this.parentElement.querySelector('[data-song-id]').getAttribute('data-song-id');
                const audioSource = document.getElementById('audioSource');
                const musicPlayer = document.getElementById('musicPlayer');

                sessionStorage.setItem('currentSong', songUrl);

                audioSource.src = songUrl;
                musicPlayer.load();
                musicPlayer.play();

                if (songUrl) {
                    document.querySelectorAll('.card').forEach(card => {
                        const cardSongUrl = card.querySelector('.play-button').getAttribute('data-song-url');
                        if (cardSongUrl === songUrl) {
                            card.style.border = '2px solid green';
                        } else {
                            card.style.border = 'none';
                        }
                    });
                }

                const response = await fetch('/Cancion/AumentarReproducciones', {
                    method: 'POST',
                    body: new URLSearchParams({ 'id': songId })
                });

                const data = await response.json();

                if (data.success) {
                    console.log("Reproducción aumentada exitosamente.");
                } else {
                    console.log("Error al aumentar las reproducciones.");
                }
            });
        });

        window.addEventListener('load', async function () {
            const songUrl = sessionStorage.getItem('currentSong');
            const currentTime = sessionStorage.getItem('currentTime');
            const songImage = sessionStorage.getItem('currentSongImage');

            const audioSource = document.getElementById('audioSource');
            const musicPlayer = document.getElementById('musicPlayer');
            audioSource.src = songUrl;
            await musicPlayer.load();
            musicPlayer.currentTime = currentTime;
            

            if (songUrl) {
                document.querySelectorAll('.card').forEach(card => {
                    const cardSongUrl = card.querySelector('.play-button').getAttribute('data-song-url');
                    if (cardSongUrl === songUrl) {
                        card.style.border = '2px solid green';
                    } else {
                        card.style.border = 'none';
                    }
                });
            }

        });

        window.addEventListener('beforeunload', function () {
            const musicPlayer = document.getElementById('musicPlayer');
            if (musicPlayer) {
                const currentTime = musicPlayer.currentTime;
                sessionStorage.setItem('currentTime', currentTime);
                sessionStorage.setItem('currentSongImage', songImage);
            }
        });
async function addtoPlaylist(event) {
    try {
        const songId = event.target.parentElement.querySelector('[data-song-id]').getAttribute('data-song-id');
        const response = await fetch('/Playlist/dameMisPlaylistJSON');
        
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }

        let playlists = await response.json();
        console.log(playlists, typeof(playlists));
        playlists = playlists.playlists;

        if (!Array.isArray(playlists)) {
            throw new Error('Expected an array of playlists');
        }

        let playlistSelector = document.createElement('select');
        playlistSelector.innerHTML = playlists.map(playlist => `<option value="${playlist.Id}">${playlist.Titulo}</option>`).join('');

        let submitButton = document.createElement('button');
        submitButton.textContent = 'Add to Playlist';
        submitButton.addEventListener('click', async function () {
            const playlistId = playlistSelector.value;
           console.log(songId, playlistId);
            const addResponse = await fetch('/Playlist/AgregarCancionAPlaylist', {
                method: 'POST',
                body: new URLSearchParams({ 'cancionOID': songId, 'playlistOID': playlistId })
            });
            


            const addData = await addResponse.json();

            if (addData.success) {
                console.log("Canción agregada a la playlist exitosamente.");
            } else {
                console.log("Error al agregar la canción a la playlist.");
            }
        });

        event.target.parentElement.appendChild(playlistSelector);
        event.target.parentElement.appendChild(submitButton);
    } catch (error) {
        console.error('Error:', error);
    }
}
</script>
}

